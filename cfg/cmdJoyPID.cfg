#! /usr/bin/env python

PACKAGE='crazyflieROS'
import roslib
roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()
#       Name          	Type      Level Description     Default Min   Max


source_enum = gen.enum([ gen.const("Qualisys", int_t, 0, "A small constant"),
    gen.const("Camera", int_t, 1, "A medium constant"),
    gen.const("Synthetic", int_t, 2, "A large constant")],
    "An enum to set size")

dist_enum = gen.enum([ gen.const("Linear", int_t, 0, "A small constant"),
    gen.const("ATAN", int_t, 1, "A medium constant"),
    gen.const("ASIN", int_t, 2, "A large constant")],
    "An enum to set size")

preset_enum = gen.enum([ gen.const("Custom", int_t, 0, "A small constant"),
    gen.const("Aggressive", int_t, 1, "A medium constant"),
    gen.const("Passive", int_t, 2, "A large constant"),
    gen.const("Linear", int_t, 3, "A large constant")],
    "An enum to set size")

#JOYSTICK
gen.add("trim_roll",    double_t,   0,  "", 			0,     -10, 10)
gen.add("trim_pitch",   double_t,   0,  "", 			0,     -10, 10)
gen.add("max_angle",	double_t,   0,  "", 			30,     10, 60)
gen.add("max_yawangle",	double_t,   0,  "", 			200,    60, 2*360)
gen.add("max_thrust",	double_t,   0,  "", 			100,    50, 100)
gen.add("min_thrust",	double_t,   0,  "", 			25,    10, 50)
gen.add("slew_limit",	double_t,   0,  "", 			45,    1, 100)
gen.add("slew_rate",	double_t,   0,  "", 			30,    1, 100)
gen.add("yaw_joy", 	bool_t, 	0, 	"Allow joystick use for yaw", 			True)



#SETTING
gen.add("Control", 	        bool_t, 	    0, 	"Control instead of autohover", 			True)
gen.add("SetCurrent",    	bool_t, 	    0, 	"Set goal to most recent configuration",     False)
gen.add("SetCurrentAuto",   bool_t, 	    0, 	"When initiating auto control, reset goal to current configuration", 	False)
gen.add("LiveUpdate",   	bool_t, 	    0, 	"Update the goal as it changes here in real time vs only updating the goal with SET", 	True)
gen.add("Set"       ,   	bool_t, 	    0, 	"Set the goal to the current settings", 	False)
gen.add("Source",           int_t,          0, "Chose source of location information", 0, 0, 2, edit_method=source_enum)
gen.add("Delay",	        double_t,       0,  "Artificial delay in the position", 	0,    0, 2)
gen.add("WandControl",  bool_t, 	    0, 	"Control instead of autohover", 			False)

#GOAL


gen.add("PIDPreset",           int_t,          0, "Chose source of location information", 0, 0, 10, edit_method=preset_enum)

gen.add("x",	double_t,   0,  "",			0,    -3, 3)
gen.add("y",	double_t,   0,  "",			0,    -3, 3)
gen.add("z",	double_t,   0,  "",			0,    0, 3)
gen.add("rz",	double_t,   0,  "",			-90,    -180, 180)
gen.add("xyControl",    	bool_t, 	    0, 	"",     True)
gen.add("yawControl",   	bool_t, 	    0, 	"", 	False)
gen.add("thrustControl", 	bool_t, 	    0, 	"",   	True)

#GAINS
gen.add("DistFunc",  int_t, 0, "Chose source of location information", 0, 0, 2, edit_method=dist_enum)
gen.add("Response",	double_t,   0,  "",		1.0,    0, 5)
gen.add("Pxy",	double_t,   0,  "",		17.7,    0, 30)
gen.add("Ixy",	double_t,   0,  "",		0.0,    0, 30)
gen.add("Dxy",	double_t,   0,  "",		5,    0, 30)
gen.add("Pyaw",	double_t,   0,  "",		3.3,    0, 30)
gen.add("Iyaw",	double_t,   0,  "",		0,    0, 30)
gen.add("Dyaw",	double_t,   0,  "",	    0,    0, 30)
gen.add("Pz",	double_t,   0,  "",		20,    0, 50)
gen.add("Iz",	double_t,   0,  "",		5,    0, 50)
gen.add("Dz",	double_t,   0,  "",		8,   0, 50)

#LIMITS
gen.add("RP_maxAngle",	double_t,   0,  "", 25,    0, 45)
gen.add("Y_maxVel",	    double_t,   0,  "", 200,   0, 360)

gen.add("z_minThrust",	    double_t,   0,  "", 50,   0, 100)
gen.add("z_maxThrust",	    double_t,   0,  "", 90,   0, 100)
gen.add("z_baseThrust",	    double_t,   0,  "", 73,   0, 100)


# Experiment
#gen.add("XY_maxVel",	double_t,   0,  "", 0.8,   0, 2)
#gen.add("Z_maxVel",	    double_t,   0,  "", 0.8,   0, 2)



exit(gen.generate(PACKAGE, "cmdJoyPID", "cmdJoyPID"))
